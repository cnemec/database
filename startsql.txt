CREATE TABLE Brand(
brandname varchar(20)
);
CREATE TABLE Model(
brandname varchar(20),
modeltype varchar(20),
bodytype varchar(20),
PRIMARY KEY (modeltype,bodytype),
FOREIGN KEY (brandname) references Brand(brandname)
);
CREATE TABLE supplier(
parts varchar(20),
modeltype varchar(20),
PRIMARY KEY (modeltype, parts),
FOREIGN KEY (modeltype) references Model(modeltype)
);
CREATE TABLE CompanyPlant(
assembled integer,
parts varchar(20),
modeltype varchar(20),
PRIMARY KEY (modeltype, parts, assembled),
FOREIGN KEY (modeltype) references Model(modeltype)
);
CREATE TABLE Options(
color varchar(20),
transmission varchar(20),
engine varchar(20),
PRIMARY KEY (engine,transmission,color)
);
CREATE TABLE Vehicle(
VID char(6),
color varchar(20),
transmission varchar(20),
engine varchar(20),
modeltype varchar(20),
bodytype varchar(20),
sold integer,
cost integer,
dname varchar(20),
DateOfSale Date,
cname VARCHAR(20),
address VARCHAR(20),
PRIMARY KEY(VID),
FOREIGN KEY(modeltype) References Model(modeltype),
FOREIGN KEY(bodytype) References Model(bodytype),
FOREIGN KEY(color) References Options(color),
FOREIGN KEY(transmission) References Options(transmission),
FOREIGN KEY(engine) References Options(engine),
FOREIGN KEY(dname) References Dealers(dname)
FOREIGN KEY(cname) References Customers(cname),
FOREIGN KEY(address) References Customers(address),
);
CREATE TABLE Dealers(
dname varchar(20),
maxunits integer,
current integer,
PRIMARY KEY(dname),
CONSTRAINT CHK_numbers CHECK (maxunits>=current)
);
CREATE TABLE Customers(
income integer,
dname varchar(20),
cname varchar(20) NOT NULL,
address varchar(20),
phonenumber character(11),
gender character(1),
PRIMARY KEY(cname, address),
CONSTRAINT CHK_Gender CHECK (gender ='f' OR gender = 'm'),
FOREIGN KEY(dname references Dealers(dname)
);

CREATE VIEW carsBought AS
SELECT VID,
FROM vehicle,
WHERE sold = 1;

CREATE VIEW femaleDriver AS
SELECT cname,
FROM Customers,
WHERE gender = 'f';

CREATE VIEW maleDrive AS
SELECT cname,
FROM Customer,
WHERE gender = 'm';

CREATE VIEW highroller AS
SELECT cname, address, income, brandname, modeltype, cost
FROM Customers NATURAL JOIN Vehicle NATURAL JOIN Model,
WHERE cost > 50,000;

CREATE VIEW openDealers AS
SELECT name, maxunits, current
FROM Dealers
WHERE current < maxunits;

CREATE VIEW multipleVehicleOwner
SELECT cname, address, count(VID) as numVehicles
from Vehicle
where numVehicles > 1
group by cname, address

CREATE TRIGGER dealerssold 
AFTER UPDATE OF sold ON Vehicle
REFERENCING OLD AS selled NEW AS sell
for each row
when(sell.sold = 1 and selled.sold = 0)
begin atomic
update dealer
set current = current-1;
where dealer.dname = sell.dname;
end;

create role manufacturing;
grant insert on Vehicle to manufacturing;
grant select on Vehicle to manufacturing;
create role salesassociates;
grant update on Vehicle to salesassociates;
grant select on Vehicle to salesassociates;
grant insert on dealers to salesassociates;

CREATE TRIGGER dealernewcar
AFTER INSERT ON Vehicle
REFERENCING NEW AS stock
for each row
when(stock.sold = 0)
begin atomic
update dealer
set current = current+1;
where dealer.dname = sell.dname;
end;
